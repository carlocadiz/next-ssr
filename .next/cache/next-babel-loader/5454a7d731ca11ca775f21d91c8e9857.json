{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/carlomagno/next-ssr/pages/robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Robots = function Robots(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Home\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.robots.map(function (robot) {\n    return __jsx(\"li\", {\n      key: robot.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"robots/\".concat(robot.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"robot.name}\")));\n  }), \"Robots\"));\n};\n\nRobots.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/users'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Robots;","map":{"version":3,"sources":["/Users/carlomagno/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","getInitialProps","res","json","data","console","log"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,EAEG,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,CAFH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,mBAAYD,KAAK,CAACC,EAAlB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CADJ,CADkB;AAAA,GAAtB,CAHR,WALH,CADJ;AAoBH,CArBD;;AAuBAL,MAAM,CAACM,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJP,KAAK,CAAC,4CAAD,CADD;;AAAA;AACfQ,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAGrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHqB,2CAId;AACHP,YAAAA,MAAM,EAAEO;AADL,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAQA,eAAeT,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = (props) => {\n    return (\n        <div>\n           <h1>Robots</h1>\n           <Link href='/'>\n                <button>Home</button>\n           </Link>\n           <div>\n\n               {\n                   props.robots.map(robot => (\n                       <li key={robot.id} >\n                           <Link href={`robots/${robot.id}`}>\n                           <a>robot.name}</a>\n                           </Link>\n                       </li>\n                   ))\n               }\n               Robots</div>\n        </div>\n    )\n}\n\nRobots.getInitialProps = async function(){\n    const res= await fetch('https://jsonplaceholder.typicode.com/users')\n    const data = await res.json()   \n    console.log(data)\n    return { \n        robots: data\n    }\n}\nexport default Robots;\n"]},"metadata":{},"sourceType":"module"}